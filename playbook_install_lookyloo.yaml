- name: Check reachable
  hosts: all
  tasks:
   - name: Ping my hosts
     ansible.builtin.ping:

- name: Install system dependencies
  hosts: lookyloo
  become: true
  become_method: sudo
  tasks:
    - name: Install general dependencies
      ansible.builtin.apt:
        pkg:
          - build-essential
          - git
          - python3-venv
          - pipx
          - acl

- name: Install kvrocks from deb
  hosts: lookyloo
  become: true
  become_method: sudo
  tasks:
    - name: Download kvrocks deb
      ansible.builtin.get_url:
        url: https://github.com/RocksLabs/kvrocks-fpm/releases/download/202502091/kvrocks_2.11.1-1_amd64.deb
        dest: /tmp/kvrocks_2.11.1-1_amd64.deb

    - name: Install kvrocks
      ansible.builtin.apt:
        deb: /tmp/kvrocks_2.11.1-1_amd64.deb

- name: Install Playwright system dependency (needs sudo)
  hosts: lookyloo
  tasks:
    - name: Update PATH for pipx / poetry
      ansible.builtin.command: pipx ensurepath

    - name: Install Playwright
      community.general.pipx:
        name: playwright

    - name: Install system deps
      ansible.builtin.command: "{{ ansible_env.HOME }}/.local/bin/playwright install-deps"

- name: Create Users
  hosts: lookyloo
  become: true
  become_method: sudo
  tasks:
    - name: Create a user 'lookyloo' with a home directory
      ansible.builtin.user:
        name: lookyloo
        create_home: true
        shell: /bin/bash

    - name: Make sure the PATH is properly set
      become_user: lookyloo
      ansible.builtin.command: pipx ensurepath

- name: Initialize Nginx
  hosts: lookyloo
  become: true
  become_method: sudo
  vars:
    gunicorn_port: 5100

  tasks:

    - name: Create ngnix config directory
      ansible.builtin.file:
        path: /etc/nginx/conf.d
        state: directory

    - name: Copy Nginx configuration
      ansible.builtin.template:
        src: templates/nginx_proxy.j2
        dest: "/etc/nginx/conf.d/{{ hostvars[inventory_hostname].ansible_host }}.conf"

    - name : Restart Nginx
      ansible.builtin.systemd:
        name: nginx
        state: restarted

    - name: Install certbot
      community.general.snap:
        name: certbot
        classic: true

    - name: Set certificate
      ansible.builtin.command:
        argv:
          - certbot
          - --nginx
          - --non-interactive
          - --agree-tos
          - --email=lookyloo@{{ hostvars[inventory_hostname].ansible_host }}
          - --domain={{ hostvars[inventory_hostname].ansible_host }}

- name: Install Lookyloo
  hosts: lookyloo
  become: true
  become_method: sudo
  become_user: lookyloo
  environment:
    PATH: "{{ ansible_env.PATH }}:{{ ansible_env.HOME }}/.local/bin"
  vars:
    allow_world_readable_tmpfiles: true
    gunicorn_port: 5100
  tasks:
    - name: Reinstall all
      ansible.builtin.command: pipx reinstall-all
    - name: Install poetry
      community.general.pipx:
        name: poetry

    - name: Install poetry shell
      ansible.builtin.command: pipx inject poetry poetry-plugin-shell

    - name: Upgrade poetry
      community.general.pipx:
        name: poetry
        state: upgrade
        include_injected: true

    - name: Clone Valkey
      ansible.builtin.git:
        repo: https://github.com/valkey-io/valkey.git
        dest: "{{ ansible_env.HOME }}/valkey"
        version: 8.1

    - name: Distclean valkey
      ansible.builtin.command: make distclean
      args:
        chdir: "{{ ansible_env.HOME }}/valkey"

    - name: Build Valkey
      ansible.builtin.command: make -j2
      args:
        chdir: "{{ ansible_env.HOME }}/valkey"

    - name: Set project directory
      ansible.builtin.set_fact:
        project_dir: "{{ ansible_env.HOME }}/lookyloo"

    - name: Clone Lookyloo
      ansible.builtin.git:
        repo: https://github.com/Lookyloo/lookyloo.git
        dest: "{{ project_dir }}"

    - name: Install Lookyloo
      ansible.builtin.command: "poetry install"
      args:
        chdir: "{{ project_dir }}"

    - name: Init .env file
      ansible.builtin.copy:
        content: "LOOKYLOO_HOME='{{ project_dir }}'"
        dest: "{{ project_dir }}/.env"

    - name: Initialize lookyloo
      ansible.builtin.command: "poetry run update --init"
      args:
        chdir: "{{ project_dir }}"

    - name: Copy logging file
      ansible.builtin.copy:
        src: ./files/logging.json
        dest: "{{ project_dir }}/config/logging.json"

    - name: Copy config file
      ansible.builtin.template:
        src: ./templates/lookyloo_generic.json.j2
        dest: "{{ project_dir }}/config/generic.json"

    - name: Load API keys
      ansible.builtin.include_vars: vars/api_keys.yml

    - name: Copy config modules file
      ansible.builtin.template:
        src: ./templates/lookyloo_modules.json.j2
        dest: "{{ project_dir }}/config/modules.json"

- name: Initialize Nginx Monitoring
  hosts: monitoring
  become: true
  become_method: sudo
  vars:
    gunicorn_port: 5200

  tasks:

    - name: Copy Nginx configuration
      ansible.builtin.template:
        src: templates/nginx_proxy.j2
        dest: "/etc/nginx/conf.d/{{ hostvars[inventory_hostname].ansible_host }}.conf"

    - name : Restart Nginx
      ansible.builtin.systemd:
        name: nginx
        state: restarted

    - name: Install certbot
      community.general.snap:
        name: certbot
        classic: true

    - name: Set certificate
      ansible.builtin.command:
        argv:
          - certbot
          - --nginx
          - --non-interactive
          - --agree-tos
          - --email=monitoring@{{ hostvars[inventory_hostname].ansible_host }}
          - --domain={{ hostvars[inventory_hostname].ansible_host }}

- name: Install Lookyloo Monitoring
  hosts: monitoring
  become: true
  become_method: sudo
  become_user: lookyloo
  environment:
    PATH: "{{ ansible_env.PATH }}:{{ ansible_env.HOME }}/.local/bin"
  vars:
    allow_world_readable_tmpfiles: true
    gunicorn_port: 5200
  tasks:
    - name: Set project directory
      ansible.builtin.set_fact:
        project_dir: "{{ ansible_env.HOME }}/monitoring"


    - name: Clone Lookyloo Monitoring
      ansible.builtin.git:
        repo: https://github.com/Lookyloo/monitoring.git
        dest: "{{ project_dir }}"

    - name: Install Lookyloo Monitoring
      ansible.builtin.command: "poetry install"
      args:
        chdir: "{{ project_dir }}"

    - name: Init .env file
      ansible.builtin.copy:
        content: "WEBMONITORING_HOME='{{ project_dir }}'"
        dest: "{{ project_dir }}/.env"

    - name: Initialize lookyloo monitoring
      ansible.builtin.command: "poetry run update --init"
      args:
        chdir: "{{ project_dir }}"

    - name: Copy config file
      ansible.builtin.template:
        src: ./templates/monitoring_generic.json.j2
        dest: "{{ project_dir }}/config/generic.json"
